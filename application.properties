info.description=tms config server
info.url=https://github.com/codecentric/spring-boot-admin
eureka.client.serviceUrl.defaultZone=http://localhost:8050/eureka/
eureka.instance.preferIpAddress=true

spring.zipkin.baseUrl=http://localhost:8060
spring.zipkin.enabled=true
spring.sleuth.sampler.percentage=1

spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=root
spring.rabbitmq.password=84411350
	  
server.session-timeout=1800
#server.context-path= # the context path, defaults to '/'
# the servlet path, defaults to '/'
server.servlet-path=/
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled
#server.tomcat.protocol-header=x-forwarded-proto # ssl forward headers
#server.tomcat.remote-ip-header=x-forwarded-for
# base dir (usually not needed, defaults to tmp)
server.tomcat.basedir=/tmp
#server.tomcat.background-processor-delay=30; # in seconds
#server.tomcat.max-threads = 0 # number of threads in protocol handler
#character encoding to use for URL decoding
server.tomcat.uri-encoding = UTF-8


#将spring boot日志记录到文件
# logging.file=D:/cache/logs/spring_boot.log
#指定日志输出级别
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR

#数据库定义
#mysql
#spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=root
#spring.datasource.password=123456
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#postgresql
#spring.datasource.url=jdbc:postgresql://192.168.117.245:5432/mws_tms
#spring.datasource.username=postgres
#spring.datasource.password=123456
#spring.datasource.driver-class-name=org.postgresql.Driver
#自动创建或删除表
#spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.format_sql=true

spring.mvc.locale= zh_CN
spring.mvc.date-format= yyyy-MM-dd
#spring.mvc.message-codes-resolver-format= # PREFIX_ERROR_CODE / POSTFIX_ERROR_CODE
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

management.security.enabled=false

spring.profiles=insecure

management.security.enabled=false

security.basic.enabled=false

#spring.profiles=secure
#spring.boot.admin.username="${security.user.name}"       #These two are needed so that the client
#spring.boot.admin.password="${security.user.password}"   #can register at the protected server api
#spring.boot.admin.client.metadata.user.name="${security.user.name}"          #These two are needed so that the server
#spring.boot.admin.client.metadata.user.password="${security.user.password}" #can access the proteceted client endpoints
#security.user.name: user
#security.user.password: pass

# HTTP encoding (HttpEncodingProperties)
 # the encoding of HTTP requests/responses
spring.http.encoding.charset=UTF-8
 # enable http encoding support
spring.http.encoding.enabled=true
 # force the configured encoding
spring.http.encoding.force=true

# MULTIPART (MultipartProperties)
spring.multipart.enabled=true
# Threshold after which files will be written to disk.
spring.multipart.file-size-threshold=0
# Intermediate location of uploaded files.
spring.multipart.location= zh_CN
# Max file size.
spring.multipart.max-file-size=10Mb
# Max request size.
spring.multipart.max-request-size=10Mb 
# REDIS (RedisProperties)
 # database name
spring.redis.database= 0
 # server host
spring.redis.host=localhost
# server password
spring.redis.password=
# connection port
spring.redis.port=6379
 # pool settings ...
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
 # name of Redis server
spring.redis.sentinel.master=
 # comma-separated list of host:port pairs
spring.redis.sentinel.nodes= 
spring.redis.timeout= 2000